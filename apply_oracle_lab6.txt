SQL> 
SQL> -- Set the page size.
SQL> SET ECHO ON
SQL> SET PAGESIZE 999
SQL> 
SQL> -- ----------------------------------------------------------------------
SQL> --  Step #1 : Add two columns to the RENTAL_ITEM table.
SQL> -- ----------------------------------------------------------------------
SQL> SELECT  'Step #1' AS "Step Number" FROM dual;

Step Nu                                                                         
-------                                                                         
Step #1                                                                         

1 row selected.

SQL> 
SQL> -- ----------------------------------------------------------------------
SQL> --  Objective #1: Add the RENTAL_ITEM_PRICE and RENTAL_ITEM_TYPE columns
SQL> -- 	       to the RENTAL_ITEM table. Both columns should use a
SQL> -- 	       NUMBER data type in Oracle, and an int unsigned data
SQL> -- 	       type.
SQL> -- ----------------------------------------------------------------------
SQL> 
SQL> -- --------------------------------------------------
SQL> --  Step 1: Write the ALTER statement.
SQL> -- --------------------------------------------------
SQL> 
SQL> alter table rental_item
  2  add (rental_item_price NUMBER)
  3  add (rental_item_type NUMBER);

Table altered.

SQL> 
SQL> 
SQL> -- ----------------------------------------------------------------------
SQL> --  Verification #1: Verify the table structure.
SQL> -- ----------------------------------------------------------------------
SQL> SET NULL ''
SQL> COLUMN table_name	 FORMAT A14
SQL> COLUMN column_id	 FORMAT 9999
SQL> COLUMN column_name  FORMAT A22
SQL> COLUMN data_type	 FORMAT A12
SQL> SELECT   table_name
  2  ,	      column_id
  3  ,	      column_name
  4  ,	      CASE
  5  		WHEN nullable = 'N' THEN 'NOT NULL'
  6  		ELSE ''
  7  	      END AS nullable
  8  ,	      CASE
  9  		WHEN data_type IN ('CHAR','VARCHAR2','NUMBER') THEN
 10  		  data_type||'('||data_length||')'
 11  		ELSE
 12  		  data_type
 13  	      END AS data_type
 14  FROM     user_tab_columns
 15  WHERE    table_name = 'RENTAL_ITEM'
 16  ORDER BY 2;

                         Column                                                 
Table Name     COLUMN_ID Name                   NULLABLE DATA_TYPE              
-------------- --------- ---------------------- -------- ------------           
RENTAL_ITEM            1 RENTAL_ITEM_ID         NOT NULL NUMBER(22)             
RENTAL_ITEM            2 RENTAL_ID              NOT NULL NUMBER(22)             
RENTAL_ITEM            3 ITEM_ID                NOT NULL NUMBER(22)             
RENTAL_ITEM            4 CREATED_BY             NOT NULL NUMBER(22)             
RENTAL_ITEM            5 CREATION_DATE          NOT NULL DATE                   
RENTAL_ITEM            6 LAST_UPDATED_BY        NOT NULL NUMBER(22)             
RENTAL_ITEM            7 LAST_UPDATE_DATE       NOT NULL DATE                   
RENTAL_ITEM            8 RENTAL_ITEM_PRICE               NUMBER(22)             
RENTAL_ITEM            9 RENTAL_ITEM_TYPE                NUMBER(22)             

9 rows selected.

SQL> 
SQL> -- ----------------------------------------------------------------------
SQL> --  Step #2 : Create the PRICE table.
SQL> -- ----------------------------------------------------------------------
SQL> -- ----------------------------------------------------------------------
SQL> --  Objective #1: Conditionally drop a PRICE table before creating a
SQL> -- 	       PRICE table and PRICE_S1 sequence.
SQL> -- ----------------------------------------------------------------------
SQL> 
SQL> -- Conditionally drop PRICE table and sequence.
SQL> BEGIN
  2    FOR i IN (SELECT null
  3  		 FROM	user_tables
  4  		 WHERE	table_name = 'PRICE') LOOP
  5  	 EXECUTE IMMEDIATE 'DROP TABLE PRICE CASCADE CONSTRAINTS';
  6    END LOOP;
  7    FOR i IN (SELECT null
  8  		 FROM	user_sequences
  9  		 WHERE	sequence_name = 'PRICE_S1') LOOP
 10  	 EXECUTE IMMEDIATE 'DROP SEQUENCE PRICE_S1';
 11    END LOOP;
 12  END;
 13  /

PL/SQL procedure successfully completed.

SQL> 
SQL> -- --------------------------------------------------
SQL> --  Step 1: Write the CREATE TABLE statement.
SQL> -- --------------------------------------------------
SQL> CREATE TABLE price
  2    (
  3  	  price_id	   NUMBER CONSTRAINT pk_price_1 PRIMARY KEY,
  4  	  item_id	   NUMBER CONSTRAINT nn_price_1 NOT NULL,
  5  	  price_type	   NUMBER,
  6  	  active_flag	   VARCHAR2(1) CONSTRAINT nn_price_2 NOT NULL,
  7  	  start_date	   DATE CONSTRAINT nn_price_3 NOT NULL,
  8  	  end_date	   DATE,
  9  	  amount	   NUMBER CONSTRAINT nn_price_4 NOT NULL,
 10  	  created_by	   NUMBER CONSTRAINT nn_price_5 NOT NULL,
 11  	  creation_date    DATE CONSTRAINT nn_price_6 NOT NULL,
 12  	  last_updated_by  NUMBER CONSTRAINT nn_price_7 NOT NULL,
 13  	  last_update_date DATE CONSTRAINT nn_price_8 NOT NULL,
 14  	  CONSTRAINT fk_price_1 FOREIGN KEY(item_id) REFERENCES item(item_id),
 15  	  CONSTRAINT fk_price_2 FOREIGN KEY(price_type) REFERENCES common_lookup(
 16  	  common_lookup_id),
 17  	  CONSTRAINT yn_price CHECK (active_flag IN ('Y', 'N')),
 18  	  CONSTRAINT fk_price_3 FOREIGN KEY(created_by) REFERENCES SYSTEM_USER(
 19  	  system_user_id),
 20  	  CONSTRAINT fk_price_4 FOREIGN KEY(last_updated_by) REFERENCES SYSTEM_USER(
 21  	  system_user_id)
 22    );

Table created.

SQL> 
SQL> 
SQL> 
SQL> -- --------------------------------------------------
SQL> --  Step 2: Write the CREATE SEQUENCE statement.
SQL> -- --------------------------------------------------
SQL> 
SQL> 
SQL> CREATE SEQUENCE price_s1;

Sequence created.

SQL> 
SQL> -- ----------------------------------------------------------------------
SQL> --  Objective #2: Verify the table structure.
SQL> -- ----------------------------------------------------------------------
SQL> SET NULL ''
SQL> COLUMN table_name	 FORMAT A14
SQL> COLUMN column_id	 FORMAT 9999
SQL> COLUMN column_name  FORMAT A22
SQL> COLUMN data_type	 FORMAT A12
SQL> SELECT   table_name
  2  ,	      column_id
  3  ,	      column_name
  4  ,	      CASE
  5  		WHEN nullable = 'N' THEN 'NOT NULL'
  6  		ELSE ''
  7  	      END AS nullable
  8  ,	      CASE
  9  		WHEN data_type IN ('CHAR','VARCHAR2','NUMBER') THEN
 10  		  data_type||'('||data_length||')'
 11  		ELSE
 12  		  data_type
 13  	      END AS data_type
 14  FROM     user_tab_columns
 15  WHERE    table_name = 'PRICE'
 16  ORDER BY 2;

                         Column                                                 
Table Name     COLUMN_ID Name                   NULLABLE DATA_TYPE              
-------------- --------- ---------------------- -------- ------------           
PRICE                  1 PRICE_ID               NOT NULL NUMBER(22)             
PRICE                  2 ITEM_ID                NOT NULL NUMBER(22)             
PRICE                  3 PRICE_TYPE                      NUMBER(22)             
PRICE                  4 ACTIVE_FLAG            NOT NULL VARCHAR2(1)            
PRICE                  5 START_DATE             NOT NULL DATE                   
PRICE                  6 END_DATE                        DATE                   
PRICE                  7 AMOUNT                 NOT NULL NUMBER(22)             
PRICE                  8 CREATED_BY             NOT NULL NUMBER(22)             
PRICE                  9 CREATION_DATE          NOT NULL DATE                   
PRICE                 10 LAST_UPDATED_BY        NOT NULL NUMBER(22)             
PRICE                 11 LAST_UPDATE_DATE       NOT NULL DATE                   

11 rows selected.

SQL> -- ----------------------------------------------------------------------
SQL> --  Objective #3: Verify the table constraints.
SQL> -- ----------------------------------------------------------------------
SQL> COLUMN constraint_name   FORMAT A16
SQL> COLUMN search_condition  FORMAT A30
SQL> SELECT   uc.constraint_name
  2  ,	      uc.search_condition
  3  FROM     user_constraints uc INNER JOIN user_cons_columns ucc
  4  ON       uc.table_name = ucc.table_name
  5  AND      uc.constraint_name = ucc.constraint_name
  6  WHERE    uc.table_name = UPPER('price')
  7  AND      ucc.column_name = UPPER('active_flag')
  8  AND      uc.constraint_name = UPPER('yn_price')
  9  AND      uc.constraint_type = 'C';

Constraint Name  Search Condition                                               
---------------- ------------------------------                                 
YN_PRICE         active_flag IN ('Y', 'N')                                      

1 row selected.

SQL> 
SQL> -- ----------------------------------------------------------------------
SQL> --  Step #3 : Insert new data into the model.
SQL> -- ----------------------------------------------------------------------
SQL> -- ----------------------------------------------------------------------
SQL> --  Objective #3: Rename ITEM_RELEASE_DATE column to RELEASE_DATE column,
SQL> -- 	       insert three new DVD releases into the ITEM table,
SQL> -- 	       insert three new rows in the MEMBER, CONTACT, ADDRESS,
SQL> -- 	       STREET_ADDRESS, and TELEPHONE tables, and insert
SQL> -- 	       three new RENTAL and RENTAL_ITEM table rows.
SQL> -- ----------------------------------------------------------------------
SQL> 
SQL> -- ----------------------------------------------------------------------
SQL> --  Step #3a: Rename ITEM_RELEASE_DATE Column.
SQL> -- ----------------------------------------------------------------------
SQL> 
SQL> ALTER TABLE item
  2  RENAME COLUMN item_release_date TO release_date;

Table altered.

SQL> 
SQL> 
SQL> -- ----------------------------------------------------------------------
SQL> --  Verification #3a: Verify the column name change.
SQL> -- ----------------------------------------------------------------------
SQL> SET NULL ''
SQL> COLUMN table_name	 FORMAT A14
SQL> COLUMN column_id	 FORMAT 9999
SQL> COLUMN column_name  FORMAT A22
SQL> COLUMN data_type	 FORMAT A12
SQL> SELECT   table_name
  2  ,	      column_id
  3  ,	      column_name
  4  ,	      CASE
  5  		WHEN nullable = 'N' THEN 'NOT NULL'
  6  		ELSE ''
  7  	      END AS nullable
  8  ,	      data_type
  9  ||      '('||data_length||')' AS data_type
 10  FROM     user_tab_columns
 11  WHERE    TABLE_NAME = 'ITEM'
 12  ORDER BY 2;

                         Column                                                 
Table Name     COLUMN_ID Name                   NULLABLE DATA_TYPE              
-------------- --------- ---------------------- -------- ------------           
ITEM                   1 ITEM_ID                NOT NULL NUMBER(22)             
ITEM                   2 ITEM_BARCODE           NOT NULL VARCHAR2(14)           
ITEM                   3 ITEM_TYPE              NOT NULL NUMBER(22)             
ITEM                   4 ITEM_TITLE             NOT NULL VARCHAR2(60)           
ITEM                   5 ITEM_SUBTITLE                   VARCHAR2(60)           
ITEM                   6 ITEM_RATING            NOT NULL VARCHAR2(8)            
ITEM                   7 RELEASE_DATE           NOT NULL DATE(7)                
ITEM                   8 CREATED_BY             NOT NULL NUMBER(22)             
ITEM                   9 CREATION_DATE          NOT NULL DATE(7)                
ITEM                  10 LAST_UPDATED_BY        NOT NULL NUMBER(22)             
ITEM                  11 LAST_UPDATE_DATE       NOT NULL DATE(7)                

11 rows selected.

SQL> 
SQL> -- ----------------------------------------------------------------------
SQL> --  Step #3b: Insert three rows in the ITEM table.
SQL> -- ----------------------------------------------------------------------
SQL> INSERT INTO item VALUES
  2  ( item_s1.nextval
  3  , '9973-16342'
  4  , (SELECT common_lookup_id
  5  	FROM common_lookup
  6  	WHERE common_lookup_context = 'ITEM'
  7  	AND common_lookup_type = 'DVD_WIDE_SCREEN')
  8  , 'Tron', NULL, 'PG-13', (TRUNC(SYSDATE) - 1)
  9  , 1, SYSDATE, 1, SYSDATE);

1 row created.

SQL> 
SQL> INSERT INTO item VALUES
  2  ( item_s1.nextval
  3  , '9973-16343'
  4  , (SELECT common_lookup_id
  5  	FROM common_lookup
  6  	WHERE common_lookup_context = 'ITEM'
  7  	AND common_lookup_type = 'DVD_WIDE_SCREEN')
  8  , 'Harry Potter', NULL, 'PG-13', (TRUNC(SYSDATE) - 1)
  9  , 1, SYSDATE, 1, SYSDATE);

1 row created.

SQL> 
SQL> INSERT INTO item VALUES
  2  ( item_s1.nextval
  3  , '9973-16344'
  4  , (SELECT common_lookup_id
  5  	FROM common_lookup
  6  	WHERE common_lookup_context = 'ITEM'
  7  	AND common_lookup_type = 'DVD_WIDE_SCREEN')
  8  , 'The Black Cauldron', NULL, 'PG', (TRUNC(SYSDATE) - 1)
  9  , 1, SYSDATE, 1, SYSDATE);

1 row created.

SQL> 
SQL> 
SQL> 
SQL> -- ----------------------------------------------------------------------
SQL> --  Verification #3b: Verify the column name change.
SQL> -- ----------------------------------------------------------------------
SQL> COLUMN item_title FORMAT A14
SQL> COLUMN today FORMAT A10
SQL> COLUMN release_date FORMAT A10 HEADING "RELEASE|DATE"
SQL> SELECT   i.item_title
  2  ,	      SYSDATE AS today
  3  ,	      i.release_date
  4  FROM     item i
  5  WHERE   (SYSDATE - i.release_date) < 31;

                          RELEASE                                               
Item Title     TODAY      DATE                                                  
-------------- ---------- ----------                                            
Tron           18-FEB-20  17-FEB-20                                             
Harry Potter   18-FEB-20  17-FEB-20                                             
The Black Caul 18-FEB-20  17-FEB-20                                             
dron                                                                            
                                                                                

3 rows selected.

SQL> 
SQL> -- ----------------------------------------------------------------------
SQL> --  Step #3c: Insert three new rows in the MEMBER, CONTACT, ADDRESS,
SQL> -- 	   STREET_ADDRESS, and TELEPHONE tables.
SQL> -- ----------------------------------------------------------------------
SQL> 
SQL> INSERT INTO member VALUES
  2  ( member_s1.nextval
  3  , (SELECT common_lookup_id
  4  	FROM common_lookup
  5  	WHERE common_lookup_context = 'MEMBER'
  6  	AND common_lookup_type = 'GROUP')
  7  , 'US00011'
  8  , '1111-3333-1111-1111'
  9  , (SELECT common_lookup_id
 10  	FROM common_lookup
 11  	WHERE common_lookup_context = 'MEMBER'
 12  	AND common_lookup_type = 'VISA_CARD')
 13  , 1, SYSDATE, 1, SYSDATE);

1 row created.

SQL> 
SQL> INSERT INTO contact VALUES
  2  ( contact_s1.nextval
  3  , member_s1.currval
  4  , (SELECT common_lookup_id
  5  	FROM common_lookup
  6  	WHERE common_lookup_context = 'CONTACT'
  7  	AND common_lookup_type = 'CUSTOMER')
  8  , 'Harry', NULL, 'Potter'
  9  , 1, SYSDATE, 1, SYSDATE);

1 row created.

SQL> 
SQL> INSERT INTO address VALUES
  2  ( address_s1.nextval
  3  , contact_s1.currval
  4  , (SELECT common_lookup_id
  5  	FROM common_lookup
  6  	WHERE common_lookup_context = 'MULTIPLE'
  7  	AND common_lookup_type = 'HOME')
  8  , 'Provo', 'Utah', '84604'
  9  , 1, SYSDATE, 1, SYSDATE);

1 row created.

SQL> 
SQL> INSERT INTO street_address VALUES
  2  ( street_address_s1.nextval
  3  , address_s1.currval
  4  , '900 E, 300 N'
  5  , 1, SYSDATE, 1, SYSDATE);

1 row created.

SQL> 
SQL> INSERT INTO telephone VALUES
  2  ( telephone_s1.nextval
  3  , contact_s1.currval
  4  , address_s1.currval
  5  , (SELECT common_lookup_id
  6  	FROM common_lookup
  7  	WHERE common_lookup_context = 'MULTIPLE'
  8  	AND common_lookup_type = 'HOME')
  9  , '1', '301', '422-4636'
 10  , 1, SYSDATE, 1, SYSDATE);

1 row created.

SQL> 
SQL> 
SQL> 
SQL> INSERT INTO contact VALUES
  2  ( contact_s1.nextval
  3  , member_s1.currval
  4  , (SELECT common_lookup_id
  5  	FROM common_lookup
  6  	WHERE common_lookup_context = 'CONTACT'
  7  	AND common_lookup_type = 'CUSTOMER')
  8  , 'Ginny', NULL, 'Potter'
  9  , 1, SYSDATE, 1, SYSDATE);

1 row created.

SQL> 
SQL> INSERT INTO address VALUES
  2  ( address_s1.nextval
  3  , contact_s1.currval
  4  , (SELECT common_lookup_id
  5  	FROM common_lookup
  6  	WHERE common_lookup_context = 'MULTIPLE'
  7  	AND common_lookup_type = 'HOME')
  8  , 'Provo', 'Utah', '84604'
  9  , 1, SYSDATE, 1, SYSDATE);

1 row created.

SQL> 
SQL> INSERT INTO street_address VALUES
  2  ( street_address_s1.nextval
  3  , address_s1.currval
  4  , '900 E, 300 N'
  5  , 1, SYSDATE, 1, SYSDATE);

1 row created.

SQL> 
SQL> INSERT INTO telephone VALUES
  2  ( telephone_s1.nextval
  3  , contact_s1.currval
  4  , address_s1.currval
  5  , (SELECT common_lookup_id
  6  	FROM common_lookup
  7  	WHERE common_lookup_context = 'MULTIPLE'
  8  	AND common_lookup_type = 'HOME')
  9  , '1', '301', '422-4636'
 10  , 1, SYSDATE, 1, SYSDATE);

1 row created.

SQL> 
SQL> 
SQL> INSERT INTO contact VALUES
  2  ( contact_s1.nextval
  3  , member_s1.currval
  4  , (SELECT common_lookup_id
  5  	FROM common_lookup
  6  	WHERE common_lookup_context = 'CONTACT'
  7  	AND common_lookup_type = 'CUSTOMER')
  8  , 'Lily', 'Luna', 'Potter'
  9  , 1, SYSDATE, 1, SYSDATE);

1 row created.

SQL> 
SQL> INSERT INTO address VALUES
  2  ( address_s1.nextval
  3  , contact_s1.currval
  4  , (SELECT common_lookup_id
  5  	FROM common_lookup
  6  	WHERE common_lookup_context = 'MULTIPLE'
  7  	AND common_lookup_type = 'HOME')
  8  , 'Provo', 'Utah', '84604'
  9  , 1, SYSDATE, 1, SYSDATE);

1 row created.

SQL> 
SQL> INSERT INTO street_address VALUES
  2  ( street_address_s1.nextval
  3  , address_s1.currval
  4  , '900 E, 300 N'
  5  , 1, SYSDATE, 1, SYSDATE);

1 row created.

SQL> 
SQL> INSERT INTO telephone VALUES
  2  ( telephone_s1.nextval
  3  , contact_s1.currval
  4  , address_s1.currval
  5  , (SELECT common_lookup_id
  6  	FROM common_lookup
  7  	WHERE common_lookup_context = 'MULTIPLE'
  8  	AND common_lookup_type = 'HOME')
  9  , '1', '301', '422-4636'
 10  , 1, SYSDATE, 1, SYSDATE);

1 row created.

SQL> 
SQL> 
SQL> 
SQL> -- ----------------------------------------------------------------------
SQL> --  Verification #3c: Verify the three new CONTACTS and their related
SQL> -- 		   information set.
SQL> -- ----------------------------------------------------------------------
SQL> COLUMN account_number  FORMAT A10	HEADING "Account|Number"
SQL> COLUMN full_name	    FORMAT A16	HEADING "Name|(Last, First MI)"
SQL> COLUMN street_address  FORMAT A14	HEADING "Street Address"
SQL> COLUMN city	    FORMAT A10	HEADING "City"
SQL> COLUMN state	    FORMAT A10	HEADING "State"
SQL> COLUMN postal_code     FORMAT A6	HEADING "Postal|Code"
SQL> SELECT   m.account_number
  2  ,	      c.last_name || ', ' || c.first_name
  3  ||       CASE
  4  		WHEN c.middle_name IS NOT NULL THEN
  5  		  ' ' || c.middle_name || ' '
  6  	      END AS full_name
  7  ,	      sa.street_address
  8  ,	      a.city
  9  ,	      a.state_province AS state
 10  ,	      a.postal_code
 11  FROM     member m INNER JOIN contact c
 12  ON       m.member_id = c.member_id INNER JOIN address a
 13  ON       c.contact_id = a.contact_id INNER JOIN street_address sa
 14  ON       a.address_id = sa.address_id INNER JOIN telephone t
 15  ON       c.contact_id = t.contact_id
 16  WHERE    c.last_name = 'Potter';

Account    Name                                                  Postal         
Number     (Last, First MI) Street Address City       State      Code           
---------- ---------------- -------------- ---------- ---------- ------         
US00011    Potter, Harry    900 E, 300 N   Provo      Utah       84604          
US00011    Potter, Ginny    900 E, 300 N   Provo      Utah       84604          
US00011    Potter, Lily Lun 900 E, 300 N   Provo      Utah       84604          
           a                                                                    
                                                                                

3 rows selected.

SQL> -- ----------------------------------------------------------------------
SQL> --  Step #3d: Insert three new RENTAL and RENTAL_ITEM table rows..
SQL> -- ----------------------------------------------------------------------
SQL> INSERT INTO rental VALUES
  2  ( rental_s1.nextval
  3  , (SELECT contact_id
  4  	FROM contact
  5  	WHERE first_name = 'Harry'
  6  	AND last_name = 'Potter')
  7  , SYSDATE, SYSDATE + 1
  8  , 1, SYSDATE, 1, SYSDATE);

1 row created.

SQL> 
SQL> INSERT INTO rental_item VALUES
  2  ( rental_item_s1.nextval
  3  , rental_s1.currval
  4  , (SELECT item_id
  5  	FROM item
  6  	WHERE item_barcode = '9736-05640-4')
  7  , 1, SYSDATE, 1, SYSDATE
  8  , NULL, NULL);

1 row created.

SQL> 
SQL> INSERT INTO rental_item VALUES
  2  ( rental_item_s1.nextval
  3  , rental_s1.currval
  4  , (SELECT item_id
  5  	FROM item
  6  	WHERE item_barcode = '24543-02392')
  7  , 1, SYSDATE, 1, SYSDATE
  8  , NULL, NULL);

1 row created.

SQL> 
SQL> 
SQL> INSERT INTO rental VALUES
  2  ( rental_s1.nextval
  3  , (SELECT contact_id
  4  	FROM contact
  5  	WHERE first_name = 'Ginny'
  6  	AND last_name = 'Potter')
  7  , SYSDATE, SYSDATE + 3
  8  , 1, SYSDATE, 1, SYSDATE);

1 row created.

SQL> 
SQL> INSERT INTO rental_item VALUES
  2  ( rental_item_s1.nextval
  3  , rental_s1.currval
  4  , (SELECT item_id
  5  	FROM item
  6  	WHERE item_barcode = '9736-05640-4')
  7  , 1, SYSDATE, 1, SYSDATE
  8  , NULL, NULL);

1 row created.

SQL> 
SQL> 
SQL> INSERT INTO rental VALUES
  2  ( rental_s1.nextval
  3  , (SELECT contact_id
  4  	FROM contact
  5  	WHERE first_name = 'Lily'
  6  	AND last_name = 'Potter')
  7  , SYSDATE, SYSDATE + 5
  8  , 1, SYSDATE, 1, SYSDATE);

1 row created.

SQL> 
SQL> INSERT INTO rental_item VALUES
  2  ( rental_item_s1.nextval
  3  , rental_s1.currval
  4  , (SELECT item_id
  5  	FROM item
  6  	WHERE item_barcode = '9736-05640-4')
  7  , 1, SYSDATE, 1, SYSDATE
  8  , NULL, NULL);

1 row created.

SQL> 
SQL> 
SQL> 
SQL> -- ----------------------------------------------------------------------
SQL> --  Verification #3d: Verify the three new CONTACTS and their related
SQL> -- 		   information set.
SQL> -- ----------------------------------------------------------------------
SQL> COLUMN full_name	FORMAT A18
SQL> COLUMN rental_id	FORMAT 9999
SQL> COLUMN rental_days FORMAT A14
SQL> COLUMN rentals	FORMAT 9999
SQL> COLUMN items	FORMAT 9999
SQL> SELECT   c.last_name||', '||c.first_name||' '||c.middle_name AS full_name
  2  ,	      r.rental_id
  3  ,	     (r.return_date - r.check_out_date) || '-DAY RENTAL' AS rental_days
  4  ,	      COUNT(DISTINCT r.rental_id) AS rentals
  5  ,	      COUNT(ri.rental_item_id) AS items
  6  FROM     rental r INNER JOIN rental_item ri
  7  ON       r.rental_id = ri.rental_id INNER JOIN contact c
  8  ON       r.customer_id = c.contact_id
  9  WHERE   (SYSDATE - r.check_out_date) < 15
 10  AND      c.last_name = 'Potter'
 11  GROUP BY c.last_name||', '||c.first_name||' '||c.middle_name
 12  ,	      r.rental_id
 13  ,	     (r.return_date - r.check_out_date) || '-DAY RENTAL'
 14  ORDER BY 2;

Name                Rent                                                        
(Last, First MI)    ID # RENTAL_DAYS    RENTALS ITEMS                           
------------------ ----- -------------- ------- -----                           
Potter, Harry       1006 1-DAY RENTAL         1     2                           
Potter, Ginny       1007 3-DAY RENTAL         1     1                           
Potter, Lily Luna   1008 5-DAY RENTAL         1     1                           

3 rows selected.

SQL> 
SQL> -- ----------------------------------------------------------------------
SQL> --  Objective #4: Modify the design of the COMMON_LOOKUP table, insert
SQL> -- 	       new data into the model, and update old non-compliant
SQL> -- 	       design data in the model.
SQL> -- ----------------------------------------------------------------------
SQL> 
SQL> -- ----------------------------------------------------------------------
SQL> --  Step #4a: Drop Indexes.
SQL> -- ----------------------------------------------------------------------
SQL> 
SQL> DROP INDEX common_lookup_n1;

Index dropped.

SQL> DROP INDEX common_lookup_u2;

Index dropped.

SQL> 
SQL> 
SQL> -- ----------------------------------------------------------------------
SQL> --  Verification #4a: Verify the unique indexes are dropped.
SQL> -- ----------------------------------------------------------------------
SQL> COLUMN table_name FORMAT A14
SQL> COLUMN index_name FORMAT A20
SQL> SELECT   table_name
  2  ,	      index_name
  3  FROM     user_indexes
  4  WHERE    table_name = 'COMMON_LOOKUP';

Table Name     Index Name                                                       
-------------- --------------------                                             
COMMON_LOOKUP  PK_CLOOKUP_1                                                     

1 row selected.

SQL> 
SQL> -- ----------------------------------------------------------------------
SQL> --  Step #4b: Add three new columns.
SQL> -- ----------------------------------------------------------------------
SQL> 
SQL> ALTER TABLE common_lookup
  2  ADD common_lookup_table VARCHAR2(30)
  3  ADD common_lookup_column VARCHAR2(30)
  4  ADD common_lookup_code VARCHAR2(30);

Table altered.

SQL> 
SQL> 
SQL> -- ----------------------------------------------------------------------
SQL> --  Verification #4b: Verify the unique indexes are dropped.
SQL> -- ----------------------------------------------------------------------
SQL> SET NULL ''
SQL> COLUMN table_name	 FORMAT A14
SQL> COLUMN column_id	 FORMAT 9999
SQL> COLUMN column_name  FORMAT A22
SQL> COLUMN data_type	 FORMAT A12
SQL> SELECT   table_name
  2  ,	      column_id
  3  ,	      column_name
  4  ,	      CASE
  5  		WHEN nullable = 'N' THEN 'NOT NULL'
  6  		ELSE ''
  7  	      END AS nullable
  8  ,	      CASE
  9  		WHEN data_type IN ('CHAR','VARCHAR2','NUMBER') THEN
 10  		  data_type||'('||data_length||')'
 11  		ELSE
 12  		  data_type
 13  	      END AS data_type
 14  FROM     user_tab_columns
 15  WHERE    table_name = 'COMMON_LOOKUP'
 16  ORDER BY 2;

                         Column                                                 
Table Name     COLUMN_ID Name                   NULLABLE DATA_TYPE              
-------------- --------- ---------------------- -------- ------------           
COMMON_LOOKUP          1 COMMON_LOOKUP_ID       NOT NULL NUMBER(22)             
COMMON_LOOKUP          2 COMMON_LOOKUP_CONTEXT  NOT NULL VARCHAR2(30)           
COMMON_LOOKUP          3 COMMON_LOOKUP_TYPE     NOT NULL VARCHAR2(30)           
COMMON_LOOKUP          4 COMMON_LOOKUP_MEANING  NOT NULL VARCHAR2(30)           
COMMON_LOOKUP          5 CREATED_BY             NOT NULL NUMBER(22)             
COMMON_LOOKUP          6 CREATION_DATE          NOT NULL DATE                   
COMMON_LOOKUP          7 LAST_UPDATED_BY        NOT NULL NUMBER(22)             
COMMON_LOOKUP          8 LAST_UPDATE_DATE       NOT NULL DATE                   
COMMON_LOOKUP          9 COMMON_LOOKUP_TABLE             VARCHAR2(30)           
COMMON_LOOKUP         10 COMMON_LOOKUP_COLUMN            VARCHAR2(30)           
COMMON_LOOKUP         11 COMMON_LOOKUP_CODE              VARCHAR2(30)           

11 rows selected.

SQL> 
SQL> -- ----------------------------------------------------------------------
SQL> --  Step #4c: Migrate data subject to re-engineered COMMON_LOOKUP table.
SQL> -- ----------------------------------------------------------------------
SQL> -- ----------------------------------------------------------------------
SQL> --  Step #4c(1): Query the pre-change state of the table.
SQL> -- ----------------------------------------------------------------------
SQL> COLUMN common_lookup_context  FORMAT A14  HEADING "Common|Lookup Context"
SQL> COLUMN common_lookup_table    FORMAT A12  HEADING "Common|Lookup Table"
SQL> COLUMN common_lookup_column   FORMAT A18  HEADING "Common|Lookup Column"
SQL> COLUMN common_lookup_type	   FORMAT A18  HEADING "Common|Lookup Type"
SQL> SELECT   common_lookup_context
  2  ,	      common_lookup_table
  3  ,	      common_lookup_column
  4  ,	      common_lookup_type
  5  FROM     common_lookup
  6  ORDER BY 1, 2, 3;

Common         Common       Common             Common                           
Lookup Context Lookup Table Lookup Column      Lookup Type                      
-------------- ------------ ------------------ ------------------               
CONTACT                                        EMPLOYEE                         
CONTACT                                        CUSTOMER                         
ITEM                                           DVD_WIDE_SCREEN                  
ITEM                                           NINTENDO_GAMECUBE                
ITEM                                           BLU-RAY                          
ITEM                                           PLAYSTATION2                     
ITEM                                           DVD_FULL_SCREEN                  
ITEM                                           XBOX                             
MEMBER                                         VISA_CARD                        
MEMBER                                         MASTER_CARD                      
MEMBER                                         GROUP                            
MEMBER                                         INDIVIDUAL                       
MEMBER                                         DISCOVER_CARD                    
MULTIPLE                                       WORK                             
MULTIPLE                                       HOME                             
SYSTEM_USER                                    INDIVIDUAL                       
SYSTEM_USER                                    COST_CENTER                      
SYSTEM_USER                                    SYSTEM_GROUP                     
SYSTEM_USER                                    DBA                              
SYSTEM_USER                                    SYSTEM_ADMIN                     

20 rows selected.

SQL> 
SQL> -- ----------------------------------------------------------------------
SQL> --  Step #4c(2): Query the post COMMON_LOOKUP_TABLE changes where the
SQL> -- 	      COMMON_LOOKUP_CONTEXT is equal to the table names.
SQL> -- ----------------------------------------------------------------------
SQL> -- ----------------------------------------------------------------------
SQL> --  Step #4c(2): Update the records.
SQL> -- ----------------------------------------------------------------------
SQL> UPDATE common_lookup
  2  SET common_lookup_table =
  3  	 CASE
  4  	   WHEN common_lookup_context <> 'MULTIPLE' THEN
  5  	      common_lookup_context
  6  	   ELSE
  7  	     NULL
  8  	    END;

20 rows updated.

SQL> 
SQL> 
SQL> 
SQL> -- ----------------------------------------------------------------------
SQL> --  Step #4c(2): Verify update of the records.
SQL> -- ----------------------------------------------------------------------
SQL> COLUMN common_lookup_context  FORMAT A14  HEADING "Common|Lookup Context"
SQL> COLUMN common_lookup_table    FORMAT A12  HEADING "Common|Lookup Table"
SQL> COLUMN common_lookup_column   FORMAT A18  HEADING "Common|Lookup Column"
SQL> COLUMN common_lookup_type	   FORMAT A18  HEADING "Common|Lookup Type"
SQL> SELECT   common_lookup_context
  2  ,	      common_lookup_table
  3  ,	      common_lookup_column
  4  ,	      common_lookup_type
  5  FROM     common_lookup
  6  ORDER BY 1, 2, 3;

Common         Common       Common             Common                           
Lookup Context Lookup Table Lookup Column      Lookup Type                      
-------------- ------------ ------------------ ------------------               
CONTACT        CONTACT                         EMPLOYEE                         
CONTACT        CONTACT                         CUSTOMER                         
ITEM           ITEM                            DVD_WIDE_SCREEN                  
ITEM           ITEM                            NINTENDO_GAMECUBE                
ITEM           ITEM                            BLU-RAY                          
ITEM           ITEM                            PLAYSTATION2                     
ITEM           ITEM                            DVD_FULL_SCREEN                  
ITEM           ITEM                            XBOX                             
MEMBER         MEMBER                          VISA_CARD                        
MEMBER         MEMBER                          MASTER_CARD                      
MEMBER         MEMBER                          GROUP                            
MEMBER         MEMBER                          INDIVIDUAL                       
MEMBER         MEMBER                          DISCOVER_CARD                    
MULTIPLE                                       WORK                             
MULTIPLE                                       HOME                             
SYSTEM_USER    SYSTEM_USER                     INDIVIDUAL                       
SYSTEM_USER    SYSTEM_USER                     COST_CENTER                      
SYSTEM_USER    SYSTEM_USER                     SYSTEM_GROUP                     
SYSTEM_USER    SYSTEM_USER                     DBA                              
SYSTEM_USER    SYSTEM_USER                     SYSTEM_ADMIN                     

20 rows selected.

SQL> 
SQL> -- ----------------------------------------------------------------------
SQL> --  Step #4c(3): Query the post COMMON_LOOKUP_TABLE changes where the
SQL> -- 	      COMMON_LOOKUP_CONTEXT is not equal to the table names.
SQL> -- ----------------------------------------------------------------------
SQL> -- ----------------------------------------------------------------------
SQL> --  Step #4c(3): Update the records.
SQL> -- ----------------------------------------------------------------------
SQL> 
SQL> UPDATE common_lookup
  2  SET common_lookup_table = CASE
  3  WHEN common_lookup_context <> 'MULTIPLE' THEN
  4  common_lookup_context
  5  ELSE
  6  'ADDRESS'
  7  END;

20 rows updated.

SQL> 
SQL> 
SQL> 
SQL> 
SQL> 
SQL> 
SQL> -- ----------------------------------------------------------------------
SQL> --  Step #4c(3): Verify update of the records.
SQL> -- ----------------------------------------------------------------------
SQL> COLUMN common_lookup_context  FORMAT A14  HEADING "Common|Lookup Context"
SQL> COLUMN common_lookup_table    FORMAT A12  HEADING "Common|Lookup Table"
SQL> COLUMN common_lookup_column   FORMAT A18  HEADING "Common|Lookup Column"
SQL> COLUMN common_lookup_type	   FORMAT A18  HEADING "Common|Lookup Type"
SQL> SELECT   common_lookup_context
  2  ,	      common_lookup_table
  3  ,	      common_lookup_column
  4  ,	      common_lookup_type
  5  FROM     common_lookup
  6  ORDER BY 1, 2, 3;

Common         Common       Common             Common                           
Lookup Context Lookup Table Lookup Column      Lookup Type                      
-------------- ------------ ------------------ ------------------               
CONTACT        CONTACT                         EMPLOYEE                         
CONTACT        CONTACT                         CUSTOMER                         
ITEM           ITEM                            DVD_WIDE_SCREEN                  
ITEM           ITEM                            NINTENDO_GAMECUBE                
ITEM           ITEM                            BLU-RAY                          
ITEM           ITEM                            PLAYSTATION2                     
ITEM           ITEM                            DVD_FULL_SCREEN                  
ITEM           ITEM                            XBOX                             
MEMBER         MEMBER                          VISA_CARD                        
MEMBER         MEMBER                          MASTER_CARD                      
MEMBER         MEMBER                          GROUP                            
MEMBER         MEMBER                          INDIVIDUAL                       
MEMBER         MEMBER                          DISCOVER_CARD                    
MULTIPLE       ADDRESS                         WORK                             
MULTIPLE       ADDRESS                         HOME                             
SYSTEM_USER    SYSTEM_USER                     INDIVIDUAL                       
SYSTEM_USER    SYSTEM_USER                     COST_CENTER                      
SYSTEM_USER    SYSTEM_USER                     SYSTEM_GROUP                     
SYSTEM_USER    SYSTEM_USER                     DBA                              
SYSTEM_USER    SYSTEM_USER                     SYSTEM_ADMIN                     

20 rows selected.

SQL> 
SQL> -- ----------------------------------------------------------------------
SQL> --  Step #4c(4): Query the post COMMON_LOOKUP_COLUMN change.
SQL> -- ----------------------------------------------------------------------
SQL> -- ----------------------------------------------------------------------
SQL> --  Step #4c(4): Update the type records.
SQL> -- ----------------------------------------------------------------------
SQL> 
SQL> Update common_lookup
  2  set common_lookup_column = CASE
  3  WHEN common_lookup_context <> 'MULTIPLE' THEN
  4  common_lookup_context || '_TYPE'
  5  ELSE
  6  NULL
  7  END;

20 rows updated.

SQL> 
SQL> 
SQL> 
SQL> -- ----------------------------------------------------------------------
SQL> --  Step #4c(4): Verify update of the type records.
SQL> -- ----------------------------------------------------------------------
SQL> COLUMN common_lookup_context  FORMAT A14  HEADING "Common|Lookup Context"
SQL> COLUMN common_lookup_table    FORMAT A12  HEADING "Common|Lookup Table"
SQL> COLUMN common_lookup_column   FORMAT A18  HEADING "Common|Lookup Column"
SQL> COLUMN common_lookup_type	   FORMAT A18  HEADING "Common|Lookup Type"
SQL> SELECT   common_lookup_context
  2  ,	      common_lookup_table
  3  ,	      common_lookup_column
  4  ,	      common_lookup_type
  5  FROM     common_lookup
  6  WHERE    common_lookup_table IN
  7  	       (SELECT table_name
  8  		FROM   user_tables)
  9  ORDER BY 1, 2, 3;

Common         Common       Common             Common                           
Lookup Context Lookup Table Lookup Column      Lookup Type                      
-------------- ------------ ------------------ ------------------               
CONTACT        CONTACT      CONTACT_TYPE       EMPLOYEE                         
CONTACT        CONTACT      CONTACT_TYPE       CUSTOMER                         
ITEM           ITEM         ITEM_TYPE          DVD_WIDE_SCREEN                  
ITEM           ITEM         ITEM_TYPE          NINTENDO_GAMECUBE                
ITEM           ITEM         ITEM_TYPE          BLU-RAY                          
ITEM           ITEM         ITEM_TYPE          PLAYSTATION2                     
ITEM           ITEM         ITEM_TYPE          DVD_FULL_SCREEN                  
ITEM           ITEM         ITEM_TYPE          XBOX                             
MEMBER         MEMBER       MEMBER_TYPE        VISA_CARD                        
MEMBER         MEMBER       MEMBER_TYPE        MASTER_CARD                      
MEMBER         MEMBER       MEMBER_TYPE        GROUP                            
MEMBER         MEMBER       MEMBER_TYPE        INDIVIDUAL                       
MEMBER         MEMBER       MEMBER_TYPE        DISCOVER_CARD                    
MULTIPLE       ADDRESS                         WORK                             
MULTIPLE       ADDRESS                         HOME                             
SYSTEM_USER    SYSTEM_USER  SYSTEM_USER_TYPE   INDIVIDUAL                       
SYSTEM_USER    SYSTEM_USER  SYSTEM_USER_TYPE   COST_CENTER                      
SYSTEM_USER    SYSTEM_USER  SYSTEM_USER_TYPE   SYSTEM_GROUP                     
SYSTEM_USER    SYSTEM_USER  SYSTEM_USER_TYPE   DBA                              
SYSTEM_USER    SYSTEM_USER  SYSTEM_USER_TYPE   SYSTEM_ADMIN                     

20 rows selected.

SQL> 
SQL> -- ----------------------------------------------------------------------
SQL> --  Step #4c(4): Query the post COMMON_LOOKUP_COLUMN change.
SQL> -- ----------------------------------------------------------------------
SQL> -- ----------------------------------------------------------------------
SQL> --  Step #4c(4): Update the ADDRESS table type records.
SQL> -- ----------------------------------------------------------------------
SQL> Update common_lookup
  2  set common_lookup_column = CASE
  3  WHEN common_lookup_context <> 'MULTIPLE' THEN
  4  common_lookup_context || '_TYPE'
  5  ELSE
  6  'ADDRESS_TYPE'
  7  END;

20 rows updated.

SQL> 
SQL> 
SQL> 
SQL> -- ----------------------------------------------------------------------
SQL> --  Step #4c(4): Verify update of the ADDRESS table type records.
SQL> -- ----------------------------------------------------------------------
SQL> COLUMN common_lookup_context  FORMAT A14  HEADING "Common|Lookup Context"
SQL> COLUMN common_lookup_table    FORMAT A12  HEADING "Common|Lookup Table"
SQL> COLUMN common_lookup_column   FORMAT A18  HEADING "Common|Lookup Column"
SQL> COLUMN common_lookup_type	   FORMAT A18  HEADING "Common|Lookup Type"
SQL> SELECT   common_lookup_context
  2  ,	      common_lookup_table
  3  ,	      common_lookup_column
  4  ,	      common_lookup_type
  5  FROM     common_lookup
  6  WHERE    common_lookup_table IN
  7  	       (SELECT table_name
  8  		FROM   user_tables)
  9  ORDER BY 1, 2, 3;

Common         Common       Common             Common                           
Lookup Context Lookup Table Lookup Column      Lookup Type                      
-------------- ------------ ------------------ ------------------               
CONTACT        CONTACT      CONTACT_TYPE       EMPLOYEE                         
CONTACT        CONTACT      CONTACT_TYPE       CUSTOMER                         
ITEM           ITEM         ITEM_TYPE          DVD_WIDE_SCREEN                  
ITEM           ITEM         ITEM_TYPE          NINTENDO_GAMECUBE                
ITEM           ITEM         ITEM_TYPE          BLU-RAY                          
ITEM           ITEM         ITEM_TYPE          PLAYSTATION2                     
ITEM           ITEM         ITEM_TYPE          DVD_FULL_SCREEN                  
ITEM           ITEM         ITEM_TYPE          XBOX                             
MEMBER         MEMBER       MEMBER_TYPE        VISA_CARD                        
MEMBER         MEMBER       MEMBER_TYPE        MASTER_CARD                      
MEMBER         MEMBER       MEMBER_TYPE        GROUP                            
MEMBER         MEMBER       MEMBER_TYPE        INDIVIDUAL                       
MEMBER         MEMBER       MEMBER_TYPE        DISCOVER_CARD                    
MULTIPLE       ADDRESS      ADDRESS_TYPE       WORK                             
MULTIPLE       ADDRESS      ADDRESS_TYPE       HOME                             
SYSTEM_USER    SYSTEM_USER  SYSTEM_USER_TYPE   INDIVIDUAL                       
SYSTEM_USER    SYSTEM_USER  SYSTEM_USER_TYPE   COST_CENTER                      
SYSTEM_USER    SYSTEM_USER  SYSTEM_USER_TYPE   SYSTEM_GROUP                     
SYSTEM_USER    SYSTEM_USER  SYSTEM_USER_TYPE   DBA                              
SYSTEM_USER    SYSTEM_USER  SYSTEM_USER_TYPE   SYSTEM_ADMIN                     

20 rows selected.

SQL> 
SQL> -- ----------------------------------------------------------------------
SQL> --  Step #4c(5): Query the post COMMON_LOOKUP_COLUMN change.
SQL> -- ----------------------------------------------------------------------
SQL> -- ----------------------------------------------------------------------
SQL> --  Step #4c(4): Alter the table and remove the unused column.
SQL> -- ----------------------------------------------------------------------
SQL> 
SQL> 
SQL> 
SQL> 
SQL> -- ----------------------------------------------------------------------
SQL> --  Step #4c(4): Verify modification of table structure.
SQL> -- ----------------------------------------------------------------------
SQL> SET NULL ''
SQL> COLUMN table_name	 FORMAT A14
SQL> COLUMN column_id	 FORMAT 9999
SQL> COLUMN column_name  FORMAT A22
SQL> COLUMN data_type	 FORMAT A12
SQL> SELECT   table_name
  2  ,	      column_id
  3  ,	      column_name
  4  ,	      CASE
  5  		WHEN nullable = 'N' THEN 'NOT NULL'
  6  		ELSE ''
  7  	      END AS nullable
  8  ,	      CASE
  9  		WHEN data_type IN ('CHAR','VARCHAR2','NUMBER') THEN
 10  		  data_type||'('||data_length||')'
 11  		ELSE
 12  		  data_type
 13  	      END AS data_type
 14  FROM     user_tab_columns
 15  WHERE    table_name = 'COMMON_LOOKUP'
 16  ORDER BY 2;

                         Column                                                 
Table Name     COLUMN_ID Name                   NULLABLE DATA_TYPE              
-------------- --------- ---------------------- -------- ------------           
COMMON_LOOKUP          1 COMMON_LOOKUP_ID       NOT NULL NUMBER(22)             
COMMON_LOOKUP          2 COMMON_LOOKUP_CONTEXT  NOT NULL VARCHAR2(30)           
COMMON_LOOKUP          3 COMMON_LOOKUP_TYPE     NOT NULL VARCHAR2(30)           
COMMON_LOOKUP          4 COMMON_LOOKUP_MEANING  NOT NULL VARCHAR2(30)           
COMMON_LOOKUP          5 CREATED_BY             NOT NULL NUMBER(22)             
COMMON_LOOKUP          6 CREATION_DATE          NOT NULL DATE                   
COMMON_LOOKUP          7 LAST_UPDATED_BY        NOT NULL NUMBER(22)             
COMMON_LOOKUP          8 LAST_UPDATE_DATE       NOT NULL DATE                   
COMMON_LOOKUP          9 COMMON_LOOKUP_TABLE             VARCHAR2(30)           
COMMON_LOOKUP         10 COMMON_LOOKUP_COLUMN            VARCHAR2(30)           
COMMON_LOOKUP         11 COMMON_LOOKUP_CODE              VARCHAR2(30)           

11 rows selected.

SQL> 
SQL> -- ----------------------------------------------------------------------
SQL> --  Step #4c(6): Insert new rows for the TELEPHONE table.
SQL> -- ----------------------------------------------------------------------
SQL> 
SQL> ALTER TABLE common_lookup
  2  DROP CONSTRAINT nn_clookup_1;

Table altered.

SQL> 
SQL> INSERT INTO common_lookup VALUES
  2  ( common_lookup_s1.nextval
  3  , NULL
  4  , 'HOME'
  5  , 'Home'
  6  , 1, SYSDATE, 1, SYSDATE
  7  , 'TELEPHONE'
  8  , 'TELEPHONE_TYPE'
  9  , 'New');

1 row created.

SQL> 
SQL> INSERT INTO common_lookup VALUES
  2  ( common_lookup_s1.nextval
  3  , NULL
  4  , 'WORK'
  5  , 'Work'
  6  , 1, SYSDATE, 1, SYSDATE
  7  , 'TELEPHONE'
  8  , 'TELEPHONE_TYPE'
  9  , 'New');

1 row created.

SQL> 
SQL> 
SQL> 
SQL> -- ----------------------------------------------------------------------
SQL> --  Step #4c(6): Verify insert of new rows to the TELEPHONE table.
SQL> -- ----------------------------------------------------------------------
SQL> COLUMN common_lookup_context  FORMAT A14  HEADING "Common|Lookup Context"
SQL> COLUMN common_lookup_table    FORMAT A12  HEADING "Common|Lookup Table"
SQL> COLUMN common_lookup_column   FORMAT A18  HEADING "Common|Lookup Column"
SQL> COLUMN common_lookup_type	   FORMAT A18  HEADING "Common|Lookup Type"
SQL> SELECT   common_lookup_context
  2  ,	      common_lookup_table
  3  ,	      common_lookup_column
  4  ,	      common_lookup_type
  5  FROM     common_lookup
  6  WHERE    common_lookup_table IN
  7  	       (SELECT table_name
  8  		FROM   user_tables)
  9  ORDER BY 1, 2, 3;

Common         Common       Common             Common                           
Lookup Context Lookup Table Lookup Column      Lookup Type                      
-------------- ------------ ------------------ ------------------               
CONTACT        CONTACT      CONTACT_TYPE       EMPLOYEE                         
CONTACT        CONTACT      CONTACT_TYPE       CUSTOMER                         
ITEM           ITEM         ITEM_TYPE          DVD_WIDE_SCREEN                  
ITEM           ITEM         ITEM_TYPE          NINTENDO_GAMECUBE                
ITEM           ITEM         ITEM_TYPE          PLAYSTATION2                     
ITEM           ITEM         ITEM_TYPE          XBOX                             
ITEM           ITEM         ITEM_TYPE          BLU-RAY                          
ITEM           ITEM         ITEM_TYPE          DVD_FULL_SCREEN                  
MEMBER         MEMBER       MEMBER_TYPE        VISA_CARD                        
MEMBER         MEMBER       MEMBER_TYPE        MASTER_CARD                      
MEMBER         MEMBER       MEMBER_TYPE        DISCOVER_CARD                    
MEMBER         MEMBER       MEMBER_TYPE        GROUP                            
MEMBER         MEMBER       MEMBER_TYPE        INDIVIDUAL                       
MULTIPLE       ADDRESS      ADDRESS_TYPE       WORK                             
MULTIPLE       ADDRESS      ADDRESS_TYPE       HOME                             
SYSTEM_USER    SYSTEM_USER  SYSTEM_USER_TYPE   INDIVIDUAL                       
SYSTEM_USER    SYSTEM_USER  SYSTEM_USER_TYPE   COST_CENTER                      
SYSTEM_USER    SYSTEM_USER  SYSTEM_USER_TYPE   SYSTEM_GROUP                     
SYSTEM_USER    SYSTEM_USER  SYSTEM_USER_TYPE   SYSTEM_ADMIN                     
SYSTEM_USER    SYSTEM_USER  SYSTEM_USER_TYPE   DBA                              
               TELEPHONE    TELEPHONE_TYPE     HOME                             
               TELEPHONE    TELEPHONE_TYPE     WORK                             

22 rows selected.

SQL> 
SQL> -- ----------------------------------------------------------------------
SQL> --  Step #4d: Alter the table structure.
SQL> -- ----------------------------------------------------------------------
SQL> ALTER TABLE common_lookup
  2  DROP COLUMN common_lookup_context;

Table altered.

SQL> ALTER TABLE common_lookup
  2  MODIFY common_lookup_table CONSTRAINT nn_clookup_8 NOT NULL
  3  MODIFY common_lookup_column CONSTRAINT nn_clookup_9 NOT NULL;

Table altered.

SQL> 
SQL> -- ----------------------------------------------------------------------
SQL> --  Step #4d: Verify changes to the table structure.
SQL> -- ----------------------------------------------------------------------
SQL> SET NULL ''
SQL> COLUMN table_name	 FORMAT A14
SQL> COLUMN column_id	 FORMAT 9999
SQL> COLUMN column_name  FORMAT A22
SQL> COLUMN data_type	 FORMAT A12
SQL> SELECT   table_name
  2  ,	      column_id
  3  ,	      column_name
  4  ,	      CASE
  5  		WHEN nullable = 'N' THEN 'NOT NULL'
  6  		ELSE ''
  7  	      END AS nullable
  8  ,	      CASE
  9  		WHEN data_type IN ('CHAR','VARCHAR2','NUMBER') THEN
 10  		  data_type||'('||data_length||')'
 11  		ELSE
 12  		  data_type
 13  	      END AS data_type
 14  FROM     user_tab_columns
 15  WHERE    table_name = 'COMMON_LOOKUP'
 16  ORDER BY 2;

                         Column                                                 
Table Name     COLUMN_ID Name                   NULLABLE DATA_TYPE              
-------------- --------- ---------------------- -------- ------------           
COMMON_LOOKUP          1 COMMON_LOOKUP_ID       NOT NULL NUMBER(22)             
COMMON_LOOKUP          2 COMMON_LOOKUP_TYPE     NOT NULL VARCHAR2(30)           
COMMON_LOOKUP          3 COMMON_LOOKUP_MEANING  NOT NULL VARCHAR2(30)           
COMMON_LOOKUP          4 CREATED_BY             NOT NULL NUMBER(22)             
COMMON_LOOKUP          5 CREATION_DATE          NOT NULL DATE                   
COMMON_LOOKUP          6 LAST_UPDATED_BY        NOT NULL NUMBER(22)             
COMMON_LOOKUP          7 LAST_UPDATE_DATE       NOT NULL DATE                   
COMMON_LOOKUP          8 COMMON_LOOKUP_TABLE    NOT NULL VARCHAR2(30)           
COMMON_LOOKUP          9 COMMON_LOOKUP_COLUMN   NOT NULL VARCHAR2(30)           
COMMON_LOOKUP         10 COMMON_LOOKUP_CODE              VARCHAR2(30)           

10 rows selected.

SQL> 
SQL> -- Display non-unique constraints.
SQL> COLUMN constraint_name   FORMAT A22  HEADING "Constraint Name"
SQL> COLUMN search_condition  FORMAT A36  HEADING "Search Condition"
SQL> COLUMN constraint_type   FORMAT A10  HEADING "Constraint|Type"
SQL> SELECT   uc.constraint_name
  2  ,	      uc.search_condition
  3  ,	      uc.constraint_type
  4  FROM     user_constraints uc INNER JOIN user_cons_columns ucc
  5  ON       uc.table_name = ucc.table_name
  6  AND      uc.constraint_name = ucc.constraint_name
  7  WHERE    uc.table_name = UPPER('common_lookup')
  8  AND      uc.constraint_type IN (UPPER('c'),UPPER('p'))
  9  ORDER BY uc.constraint_type DESC
 10  ,	      uc.constraint_name;

                                                            Constraint          
Constraint Name        Search Condition                     Type                
---------------------- ------------------------------------ ----------          
PK_CLOOKUP_1                                                P                   
NN_CLOOKUP_2           "COMMON_LOOKUP_TYPE" IS NOT NULL     C                   
NN_CLOOKUP_3           "COMMON_LOOKUP_MEANING" IS NOT NULL  C                   
NN_CLOOKUP_4           "CREATED_BY" IS NOT NULL             C                   
NN_CLOOKUP_5           "CREATION_DATE" IS NOT NULL          C                   
NN_CLOOKUP_6           "LAST_UPDATED_BY" IS NOT NULL        C                   
NN_CLOOKUP_7           "LAST_UPDATE_DATE" IS NOT NULL       C                   
NN_CLOOKUP_8           "COMMON_LOOKUP_TABLE" IS NOT NULL    C                   
NN_CLOOKUP_9           "COMMON_LOOKUP_COLUMN" IS NOT NULL   C                   

9 rows selected.

SQL> 
SQL> -- ----------------------------------------------------------------------
SQL> --  Step #4d: Add unique index.
SQL> -- ----------------------------------------------------------------------
SQL> 
SQL> CREATE UNIQUE INDEX common_lookup_u2
  2    ON common_lookup(common_lookup_table,common_lookup_column,common_lookup_type);

Index created.

SQL> 
SQL> 
SQL> 
SQL> -- ----------------------------------------------------------------------
SQL> --  Step #4d: Verify new unique index.
SQL> -- ----------------------------------------------------------------------
SQL> COLUMN sequence_name   FORMAT A22 HEADING "Sequence Name"
SQL> COLUMN column_position FORMAT 999 HEADING "Column|Position"
SQL> COLUMN column_name     FORMAT A22 HEADING "Column|Name"
SQL> SELECT   ui.index_name
  2  ,	      uic.column_position
  3  ,	      uic.column_name
  4  FROM     user_indexes ui INNER JOIN user_ind_columns uic
  5  ON       ui.index_name = uic.index_name
  6  AND      ui.table_name = uic.table_name
  7  WHERE    ui.table_name = UPPER('common_lookup')
  8  ORDER BY ui.index_name
  9  ,	      uic.column_position;

                       Column Column                                            
Index Name           Position Name                                              
-------------------- -------- ----------------------                            
COMMON_LOOKUP_U2            1 COMMON_LOOKUP_TABLE                               
COMMON_LOOKUP_U2            2 COMMON_LOOKUP_COLUMN                              
COMMON_LOOKUP_U2            3 COMMON_LOOKUP_TYPE                                
PK_CLOOKUP_1                1 COMMON_LOOKUP_ID                                  

4 rows selected.

SQL> 
SQL> -- ----------------------------------------------------------------------
SQL> --  Step #4d: Update the foreign keys of the TELEPHONE table.
SQL> -- ----------------------------------------------------------------------
SQL> 
SQL> UPDATE telephone
  2  SET telephone_type =
  3  CASE
  4    WHEN telephone_type = (
  5  	  SELECT common_lookup_id
  6  	  FROM common_lookup
  7  	  WHERE common_lookup_table = 'ADDRESS'
  8  	  AND common_lookup_column = 'ADDRESS_TYPE'
  9  	  AND common_lookup_type = 'HOME')
 10    THEN (
 11  	  SELECT common_lookup_id
 12  	  FROM common_lookup
 13  	  WHERE common_lookup_table = 'TELEPHONE'
 14  	  AND common_lookup_column = 'TELEPHONE_TYPE'
 15  	  AND common_lookup_type = 'HOME')
 16    ELSE (
 17  	  SELECT common_lookup_id
 18  	  FROM common_lookup
 19  	  WHERE common_lookup_table = 'TELEPHONE'
 20  	  AND common_lookup_column = 'TELEPHONE_TYPE'
 21  	  AND common_lookup_type = 'WORK')
 22    END;

15 rows updated.

SQL> 
SQL> 
SQL> 
SQL> -- ----------------------------------------------------------------------
SQL> --  Step #4d: Verify the foreign keys of the TELEPHONE table.
SQL> -- ----------------------------------------------------------------------
SQL> COLUMN common_lookup_table  FORMAT A14 HEADING "Common|Lookup Table"
SQL> COLUMN common_lookup_column FORMAT A14 HEADING "Common|Lookup Column"
SQL> COLUMN common_lookup_type	 FORMAT A8  HEADING "Common|Lookup|Type"
SQL> COLUMN count_dependent	 FORMAT 999 HEADING "Count of|Foreign|Keys"
SQL> COLUMN count_lookup	 FORMAT 999 HEADING "Count of|Primary|Keys"
SQL> SELECT   cl.common_lookup_table
  2  ,	      cl.common_lookup_column
  3  ,	      cl.common_lookup_type
  4  ,	      COUNT(a.address_id) AS count_dependent
  5  ,	      COUNT(DISTINCT cl.common_lookup_table) AS count_lookup
  6  FROM     address a RIGHT JOIN common_lookup cl
  7  ON       a.address_type = cl.common_lookup_id
  8  WHERE    cl.common_lookup_table = 'ADDRESS'
  9  AND      cl.common_lookup_column = 'ADDRESS_TYPE'
 10  AND      cl.common_lookup_type IN ('HOME','WORK')
 11  GROUP BY cl.common_lookup_table
 12  ,	      cl.common_lookup_column
 13  ,	      cl.common_lookup_type
 14  UNION
 15  SELECT   cl.common_lookup_table
 16  ,	      cl.common_lookup_column
 17  ,	      cl.common_lookup_type
 18  ,	      COUNT(t.telephone_id) AS count_dependent
 19  ,	      COUNT(DISTINCT cl.common_lookup_table) AS count_lookup
 20  FROM     telephone t RIGHT JOIN common_lookup cl
 21  ON       t.telephone_type = cl.common_lookup_id
 22  WHERE    cl.common_lookup_table = 'TELEPHONE'
 23  AND      cl.common_lookup_column = 'TELEPHONE_TYPE'
 24  AND      cl.common_lookup_type IN ('HOME','WORK')
 25  GROUP BY cl.common_lookup_table
 26  ,	      cl.common_lookup_column
 27  ,	      cl.common_lookup_type;

                              Common   Count of Count of                        
Common         Common         Lookup    Foreign  Primary                        
Lookup Table   Lookup Column  Type         Keys     Keys                        
-------------- -------------- -------- -------- --------                        
ADDRESS        ADDRESS_TYPE   HOME           15        1                        
ADDRESS        ADDRESS_TYPE   WORK            0        1                        
TELEPHONE      TELEPHONE_TYPE HOME           15        1                        
TELEPHONE      TELEPHONE_TYPE WORK            0        1                        

4 rows selected.

SQL> 
SQL> SPOOL OFF
